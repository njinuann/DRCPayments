/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RubyPayments;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author NJINU
 */
public class RepotsPanel extends javax.swing.JPanel {

    /**
     * Creates new form RepotsPanel
     */
    String billerType1 = "";
    String Biller_ID = "";
    static SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy");
    Date statdt, enddt;
    boolean generated = false;
    String NullDate = "N";
    String NullDate2 = "N";
    String filter = null;
    String Datefilter = null;
    TXUtility util = new TXUtility();
    JDialog reportsDialog = null;

    public RepotsPanel() {
        initComponents();
        setCombo();
        billerType1 = "SCHOOL";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void setCombo() {
        util.checkBillerName().stream().forEach((item) -> {
            schcombo.addItem(item);
        });

    }

    public void showReportsDialog() {

        if (reportsDialog == null) {
            reportsDialog = new JDialog(ExtPayMain.uiFrame, "Biller Account Config");
            reportsDialog.setIconImage(ExtPayMain.uiFrame.getIconImage());

            reportsDialog.setContentPane(this);
            reportsDialog.pack();

            reportsDialog.setResizable(false);
            reportsDialog.setLocationRelativeTo(ExtPayMain.uiFrame);
            reportsDialog.setVisible(true);
        } else {
            reportsDialog.setVisible(true);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        RtypeCombo = new javax.swing.JComboBox();
        schcombo = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        BstatDt = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        channel = new javax.swing.JTextField();
        idNoField = new javax.swing.JLabel();
        idNo = new javax.swing.JTextField();
        BendDt = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Report Type");

        RtypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "School Fees", "Star Times", "Tax" }));
        RtypeCombo.setMaximumSize(new java.awt.Dimension(4, 20));
        RtypeCombo.setMinimumSize(new java.awt.Dimension(4, 20));
        RtypeCombo.setPreferredSize(new java.awt.Dimension(4, 20));
        RtypeCombo.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                RtypeComboItemStateChanged(evt);
            }
        });
        RtypeCombo.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                RtypeComboPropertyChange(evt);
            }
        });

        schcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--" }));
        schcombo.setMaximumSize(new java.awt.Dimension(4, 20));
        schcombo.setMinimumSize(new java.awt.Dimension(4, 20));
        schcombo.setPreferredSize(new java.awt.Dimension(4, 20));
        schcombo.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                schcomboItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(RtypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(schcombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RtypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(schcombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Filters")));

        BstatDt.setPreferredSize(new java.awt.Dimension(4, 20));

        jLabel3.setText("End Date");

        channel.setMaximumSize(new java.awt.Dimension(4, 20));

        idNoField.setText("Student Id");

        idNo.setMaximumSize(new java.awt.Dimension(4, 20));

        BendDt.setPreferredSize(new java.awt.Dimension(4, 20));

        jLabel5.setText("Channel");

        jLabel2.setText("Start Date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(idNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idNo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(BstatDt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BendDt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(channel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idNoField)
                    .addComponent(idNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(channel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2))
                    .addComponent(BstatDt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BendDt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jButton1.setText("Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(23, 23, 23)
                        .addComponent(jButton2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void RtypeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RtypeComboItemStateChanged
        // TODO add your handling code here:
        if (RtypeCombo.getSelectedItem().equals("School Fees")) {
            idNoField.setText("Student Id");
            schcombo.setEnabled(true);
            billerType1 = "SCHOOL";
        } else if (RtypeCombo.getSelectedItem().equals("Tax")) {
            idNoField.setText("NP");
            schcombo.setEnabled(false);
            billerType1 = "TAX";
        } else {
            idNoField.setText("Card No");
            schcombo.setEnabled(false);
            billerType1 = "TV";
        }
    }//GEN-LAST:event_RtypeComboItemStateChanged

    private void RtypeComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_RtypeComboPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_RtypeComboPropertyChange

    private void schcomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_schcomboItemStateChanged
        // TODO add your handling code here:
        if (!schcombo.getSelectedItem().equals("--")) {
            Biller_ID = splitbillerItem(schcombo.getSelectedItem().toString());
        }
    }//GEN-LAST:event_schcomboItemStateChanged
    public String splitbillerItem(String bsName) {
        //  String temp = splitbillerItem(schcombo.getSelectedItem().toString());
        String temp = bsName;
        String[] splitString = temp.split("\\~");

        for (int i = 0; i < splitString.length; i++) {
            //System.out.println("splitString[" + i + "] is " + splitString[i]);
        }
        return splitString[1];
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String startDate;
        String endDate;
        statdt = BstatDt.getDate();
        enddt = BendDt.getDate();

        System.err.println("check pick = " + billerType1);
        System.err.println("date " + statdt);

        if (statdt == null || statdt.equals("")) {
            statdt = (new Date());
            startDate = sdf2.format(statdt);
            NullDate = "Y";
            Datefilter = "";
        } else {
            NullDate = "N";
            startDate = sdf2.format(BstatDt.getDate());
        }
        if (enddt == null || enddt.equals("")) {
            enddt = (new Date());
            endDate = sdf2.format(enddt);
            NullDate2 = "Y";
        } else {
            NullDate2 = "N";
            endDate = sdf2.format(new Date());
        }

        try {
            System.err.println("NullDate " + NullDate);
            System.err.println("NullDate 2" + NullDate2);
            System.err.println("selected3 " + startDate);
            System.err.println("selected4 " + endDate);
            System.err.println("selected5 " + RtypeCombo.getSelectedItem());
            System.err.println("selected6 " + RtypeCombo.getSelectedIndex());

            if (RtypeCombo.getSelectedItem().equals("School Fees")) {
                Log("Check 0");
                //                System.err.println("NullDate " + NullDate);
                //                System.err.println("NullDate 2" + NullDate2);
                //                System.err.println("selected3 " + startDate);
                //                System.err.println("selected4 " + endDate);
                //                System.err.println("selected5 " + RtypeCombo.getSelectedItem());
                //                System.err.println("selected6 " + RtypeCombo.getSelectedIndex());
                if (!idNo.getText().equalsIgnoreCase("") && channel.getText().trim().equals("") && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 1");
                    if (schcombo.getSelectedItem().toString().equals("--")) {
                        filter = "and BL.member_no = '" + idNo.getText() + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    } else {
                        filter = "and BL.member_no = '" + idNo.getText() + "' and BL.biller_id = '" + Biller_ID + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    }
                } else if (idNo.getText().isEmpty() && !channel.getText().isEmpty() && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 2");
                    if (schcombo.getSelectedItem().toString().equals("--")) {
                        filter = "and btl.channel  = '" + channel.getText() + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                    } else {
                        filter = "and btl.UTILITY_TYPE  LIKE % '" + channel.getText() + "'% and BL.BILLER_ID = '" + Biller_ID + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    }
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 3");
                    if (schcombo.getSelectedItem().toString().equals("--")) {
                        filter = "and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') = '" + startDate + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    } else {
                        filter = "and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') = '" + startDate + "' and BL.biller_id = '" + Biller_ID + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    }
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 4");
                    if (schcombo.getSelectedItem().toString().equals("--")) {
                        filter = "and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') <= '" + endDate + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    } else {
                        filter = "and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') <= '" + endDate + "' and biller_id = '" + Biller_ID + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    }
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 5");
                    if (schcombo.getSelectedItem().toString().equals("--")) {
                        filter = "and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') between '" + startDate + "' and '" + endDate + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    } else {
                        filter = "and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') between '" + startDate + "' and '" + endDate + "' and BL.biller_id = '" + Biller_ID + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    }
                } else if (!idNo.getText().isEmpty() && !channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 6");
                    if (schcombo.getSelectedItem().toString().equals("--")) {
                        filter = "and BL.member_no = '" + idNo.getText() + "' and btl.UTILITY_TYPE  LIKE  %'" + channel.getText() + "'%  and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') between '" + startDate + "' and '" + endDate + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    } else {
                        filter = "and BL.member_no = '" + idNo.getText() + "' and btl.UTILITY_TYPE  LIKE%'" + channel.getText() + "'%  and to_char(btl.TXN_DATE_TIME,'dd/mm/yyyy') between '" + startDate + "' and '" + endDate + "' and biller_id = '" + Biller_ID + "'";
                        util.generateExcelreport(filter, billerType1, Biller_ID);
                        generated = true;
                    }

                    if (generated) {
                        clearFields();
                        JOptionPane.showMessageDialog(this, "generation completed", "Report", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    Log("Check 7");
                    filter = "";
                    util.generateExcelreport(filter, billerType1, Biller_ID);
                    generated = true;
                }
                if (generated) {
                    clearFields();
                    JOptionPane.showMessageDialog(this, "generation completed", "Report", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            if (RtypeCombo.getSelectedItem().equals("Star Times")) {//School Fees, Star Times, Tax
                Log("Check 0___ TV");
                System.err.println("NullDate " + NullDate);
                System.err.println("NullDate 2" + NullDate2);
                System.err.println("selected3 " + startDate);
                System.err.println("selected4 " + endDate);
                System.err.println("selected5 " + RtypeCombo.getSelectedItem());
                System.err.println("selected6 " + RtypeCombo.getSelectedIndex());
                if (!idNo.getText().equalsIgnoreCase("") && channel.getText().trim().equals("") && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("Z")) {
                    Log("Check 1");
                    filter = " and btl.customer_Code = '" + idNo.getText() + "'";
                    util.generateTVreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && !channel.getText().isEmpty() && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 2");
                    filter = " and btl.channel   = '" + channel.getText() + "'";
                    util.generateTVreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 3");
                    filter = " and to_char(btl.effectivedt,'dd/mm/yyyy') = '" + startDate + "'";
                    util.generateTVreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 4");
                    filter = " and to_char(btl.effectivedt,'dd/mm/yyyy') <= '" + endDate + "'";
                    util.generateTVreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 5");
                    filter = " and to_char(btl.effectivedt,'dd/mm/yyyy') between '" + startDate + "' and '" + endDate + "'";
                    util.generateTVreport(filter, billerType1);
                    generated = true;
                } else {
                    Log("Check 6");
                    filter = "";
                    util.generateTVreport(filter, billerType1);
                    generated = true;
                }
                if (generated) {
                    clearFields();
                    JOptionPane.showMessageDialog(this, "generation completed", "Report", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            if (RtypeCombo.getSelectedItem().equals("Tax")) {
                Log(" checking for tax Check 0");
                System.err.println("NullDate " + NullDate);
                System.err.println("NullDate 2" + NullDate2);
                System.err.println("selected3 " + startDate);
                System.err.println("selected4 " + endDate);
                System.err.println("selected5 " + RtypeCombo.getSelectedItem());
                System.err.println("selected6 " + RtypeCombo.getSelectedIndex());
                if (!idNo.getText().equalsIgnoreCase("") && channel.getText().trim().equals("") && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("Z")) {
                    Log("Check 1");
                    filter = " and btl.P_number = '" + idNo.getText() + "'";
                    util.generateTaxreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && !channel.getText().isEmpty() && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 2");
                    filter = " and btl.channel   = '" + channel.getText() + "'";
                    util.generateTaxreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("Y")) {
                    Log("Check 3");
                    filter = " and to_char(btl.effectivedt,'dd/mm/yyyy') = '" + startDate + "'";
                    util.generateTaxreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("Y") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 4");
                    filter = " and to_char(btl.effectivedt,'dd/mm/yyyy') <= '" + endDate + "'";
                    util.generateTaxreport(filter, billerType1);
                    generated = true;
                } else if (idNo.getText().isEmpty() && channel.getText().isEmpty() && NullDate.equalsIgnoreCase("N") && NullDate2.equalsIgnoreCase("N")) {
                    Log("Check 5");
                    filter = " and to_char(btl.effectivedt,'dd/mm/yyyy') between '" + startDate + "' and '" + endDate + "'";
                    util.generateTaxreport(filter, billerType1);
                    generated = true;
                } else {
                    Log("tax Check 6");
                    filter = "";
                    util.generateTaxreport(filter, billerType1);
                    generated = true;
                }
                if (generated) {
                    clearFields();
                    JOptionPane.showMessageDialog(ExtPayMain.uiFrame, " ETR generation completed", "Report", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(ExtPayMain.uiFrame, "Report Failed", "Report", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        reportsDialog.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed
    public void clearFields() {
        idNo.setText("");
        channel.setText("");
        BstatDt.setDate(null);
        BendDt.setDate(null);
    }

    public void Log(String msg) {
        System.out.println("log>> " + msg);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser BendDt;
    private com.toedter.calendar.JDateChooser BstatDt;
    private javax.swing.JComboBox RtypeCombo;
    private javax.swing.JTextField channel;
    private javax.swing.JTextField idNo;
    private javax.swing.JLabel idNoField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JComboBox schcombo;
    // End of variables declaration//GEN-END:variables
}
